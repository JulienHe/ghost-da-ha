@charset "UTF-8";
@import url(http://fonts.googleapis.com/css?family=Raleway:400,100,200,300,500,600);
@import url(http://fonts.googleapis.com/css?family=Kreon:300,400,700);
/*------------------------------------*\
    STYLE.CSS
\*------------------------------------*/
/**
 * Setup
 */
/*------------------------------------*\
    VARS.SCSS
\*------------------------------------*/
/**
 * Any variables you find set in inuit.css’ `_vars.scss` that you do not wish to
 * keep, simply redefine here. This means that if inuit.css, for example, sets
 * your `$base-font-size` at 16px and you wish it to be 14px, simply redeclare
 * that variable in this file. inuit.css ignores its own variables in favour of
 * using your own, so you can completely modify how inuit.css works without ever
 * having to alter the framework itself.
 */
/*------------------------------------*\
    $OBJECTS-AND-ABSTRACTIONS
\*------------------------------------*/
/**
 * All of inuit.css’ objects and abstractions are initially turned off by
 * default. This means that you start any project with as little as possible,
 * and introducing objects and abstractions is as simple as switching the
 * following variables to `true`.
 */
/*------------------------------------*\
    $OVERRIDES
\*------------------------------------*/
/**
 * Place any variables that should override inuit.css’ defaults here.
 */
/*------------------------------------*\
    $CUSTOM
\*------------------------------------*/
/**
 * Place any of your own variables that sit on top of inuit.css here.
 */
/*------------------------------------*\
    INUIT.CSS
\*------------------------------------*/
/*!*
 *
 * inuitcss.com -- @inuitcss -- @csswizardry
 *
 */
/**
 * inuit.css acts as a base stylesheet which you should extend with your own
 * theme stylesheet.
 *
 * inuit.css aims to do the heavy lifting; sorting objects and abstractions,
 * design patterns and fiddly bits of CSS, whilst leaving as much design as
 * possible to you. inuit.css is the scaffolding to your decorator.
 *
 * This stylesheet is heavily documented and contains lots of comments, please
 * take care to read and refer to them as you build. For further support please
 * tweet at @inuitcss.
 *
 * Owing to the amount of comments please only ever use minified CSS in
 * production. This file is purely a dev document.
 *
 * The table of contents below maps to section titles of the same name, to jump
 * to any section simply run a find for $[SECTION-TITLE].
 *
 * Most objects and abstractions come with a chunk of markup that you should be
 * able to paste into any view to quickly see how the CSS works in conjunction
 * with the correct HTML.
 *
 * inuit.css is written to this standard: github.com/csswizardry/CSS-Guidelines
 *
 * LICENSE
 *
 * Copyright 2013 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Thank you for choosing inuit.css. May your web fonts render perfectly.
 */
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 *
 * MIXINS..............Super-simple Sass stuff
 * NORMALIZE...........normalize.css
 * RESET...............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 *
 * MAIN................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * SMALLPRINT..........Smaller text elements like `small`
 * QUOTES..............
 * CODE................
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 *
 * GRIDS...............Fluid, proportional and nestable grids
 * FLEXBOX.............Crudely emulate flexbox
 * COLUMNS.............CSS3 columns
 * NAV.................A simple abstraction to put a list in horizontal nav mode
 * OPTIONS.............Grouped nav items
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 * MARGINALIA..........Simple marginalia content
 * ISLAND..............Boxed off content
 * BLOCK-LIST..........Blocky lists of content
 * MATRIX..............Gridded lists
 * SPLIT...............A simple split-in-two object
 * THIS-OR-THIS........Options object
 * LINK-COMPLEX........
 * FLYOUT..............Flyout-on-hover object
 * ARROWS..............CSS arrows
 * SPRITE..............Generic spriting element
 * ICON-TEXT...........Icon and text couplings
 * BEAUTONS............Use the beautons micro library
 * LOZENGES............Basic lozenge styles
 * RULES...............Horizontal rules
 * STATS...............Simple stats object
 * GREYBOX.............Wireframing styles
 *
 * WIDTHS..............Width classes for use alongside the grid system etc.
 * PUSH................Push classes for manipulating grids
 * PULL................Pull classes for manipulating grids
 * BRAND...............Helper class to apply brand treatment to elements
 * HELPER..............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 *
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 *
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $DEFAULTS
\*------------------------------------*/
/**
 * inuit.css’ default variables. Redefine these in your `_vars.scss` file (found
 * in the inuit.css-web-template) to override them.
 */
/*------------------------------------*\
    $DEBUG
\*------------------------------------*/
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/*------------------------------------*\
    $BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base stuff
 */
/**
 * Base font-family.
 */
/**
 * Default colour for objects’ borders etc.
 */
/*------------------------------------*\
    $RESPONSIVE
\*------------------------------------*/
/**
 * Responsiveness?
 */
/**
 * Responsiveness for widescreen/high resolution desktop monitors and beyond?
 * Note: `$responsive` variable above must be set to true before enabling this.
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Note: `$push` variable above must be set to true before enabling these.
 */
/**
 * Note: `$pull` variable above must be set to true before enabling these.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * English quote marks?
 */
/**
 * If you want English quotes then please do not edit these; they’re only here
 * because Sass needs them.
 */
/**
 * If you need non-English quotes, please alter the following values accordingly:
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * Brand stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/*------------------------------------*\
    $OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/*------------------------------------*\
    $FRAMEWORK
\*------------------------------------*/
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
   .foo{
       @include vendor(animation, shrink 3s);
   }

   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
/* line 22, ../scss/inuit.css/generic/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
/* line 32, ../scss/inuit.css/generic/_normalize.scss */
audio,
canvas,
video {
  display: inline-block; }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 41, ../scss/inuit.css/generic/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
/* line 50, ../scss/inuit.css/generic/_normalize.scss */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 64, ../scss/inuit.css/generic/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Remove default margin.
 */
/* line 74, ../scss/inuit.css/generic/_normalize.scss */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
/* line 86, ../scss/inuit.css/generic/_normalize.scss */
a:focus {
  outline: thin dotted; }

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 95, ../scss/inuit.css/generic/_normalize.scss */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
/* line 108, ../scss/inuit.css/generic/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
/* line 117, ../scss/inuit.css/generic/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 126, ../scss/inuit.css/generic/_normalize.scss */
b,
strong {
  font-weight: bold; }

/*
 * Address styling not present in Safari 5 and Chrome.
 */
/* line 134, ../scss/inuit.css/generic/_normalize.scss */
dfn {
  font-style: italic; }

/*
 * Address differences between Firefox and other browsers.
 */
/* line 142, ../scss/inuit.css/generic/_normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
/* line 152, ../scss/inuit.css/generic/_normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
/* line 164, ../scss/inuit.css/generic/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/*
 * Improve readability of pre-formatted text in all browsers.
 */
/* line 173, ../scss/inuit.css/generic/_normalize.scss */
pre {
  white-space: pre-wrap; }

/*
 * Set consistent quote types.
 */
/* line 181, ../scss/inuit.css/generic/_normalize.scss */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/*
 * Address inconsistent and variable font size in all browsers.
 */
/* line 189, ../scss/inuit.css/generic/_normalize.scss */
small {
  font-size: 80%; }

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 198, ../scss/inuit.css/generic/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 205, ../scss/inuit.css/generic/_normalize.scss */
sup {
  top: -0.5em; }

/* line 209, ../scss/inuit.css/generic/_normalize.scss */
sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
/* line 221, ../scss/inuit.css/generic/_normalize.scss */
img {
  border: 0; }

/*
 * Correct overflow displayed oddly in IE 9.
 */
/* line 229, ../scss/inuit.css/generic/_normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
/* line 241, ../scss/inuit.css/generic/_normalize.scss */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
/* line 253, ../scss/inuit.css/generic/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 264, ../scss/inuit.css/generic/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
/* line 278, ../scss/inuit.css/generic/_normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 290, ../scss/inuit.css/generic/_normalize.scss */
button,
input {
  line-height: normal; }

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
/* line 302, ../scss/inuit.css/generic/_normalize.scss */
button,
select {
  text-transform: none; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 317, ../scss/inuit.css/generic/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * Re-set default cursor for disabled elements.
 */
/* line 327, ../scss/inuit.css/generic/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default; }

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
/* line 337, ../scss/inuit.css/generic/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 348, ../scss/inuit.css/generic/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
/* line 361, ../scss/inuit.css/generic/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Remove inner padding and border in Firefox 4+.
 */
/* line 370, ../scss/inuit.css/generic/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
/* line 380, ../scss/inuit.css/generic/_normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
/* line 393, ../scss/inuit.css/generic/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 409, ../scss/inuit.css/generic/_normalize.scss */
html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video, a {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
  list-style: none;
  text-decoration: none; }

/*------------------------------------*\
    $RESET
    \*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we...?
*/
/* line 16, ../scss/inuit.css/generic/_reset.scss */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

/* line 22, ../scss/inuit.css/generic/_reset.scss */
* {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box; }

/**
 * The usual...
 */
/* line 37, ../scss/inuit.css/generic/_reset.scss */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
/* line 45, ../scss/inuit.css/generic/_reset.scss */
abbr[title], dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
/* line 52, ../scss/inuit.css/generic/_reset.scss */
u, ins {
  text-decoration: none; }

/**
 * Apply faux underline via `border-bottom`.
 */
/* line 59, ../scss/inuit.css/generic/_reset.scss */
ins {
  border-bottom: 1px solid; }

/**
 * So that `alt` text is visually offset if images don’t load.
 */
/* line 66, ../scss/inuit.css/generic/_reset.scss */
img {
  font-style: italic; }

/**
 * Give form elements some cursor interactions...
 */
/* line 78, ../scss/inuit.css/generic/_reset.scss */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer; }

/* line 84, ../scss/inuit.css/generic/_reset.scss */
.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none; }

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
/* line 10, ../scss/inuit.css/generic/_clearfix.scss */
.cf:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
/* line 24, ../scss/inuit.css/generic/_shared.scss */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre,
.media,
.island,
.islet {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }
  /* line 28, ../scss/inuit.css/generic/_shared.scss */
  .islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet
  ul, .islet ol, .islet dl, .islet
  blockquote, .islet p, .islet address, .islet
  table, .islet
  fieldset, .islet figure, .islet
  pre, .islet
  .media, .islet
  .island, .islet
  .islet {
    margin-bottom: 12px;
    margin-bottom: 0.75rem; }

/**
 * Doubled up `margin-bottom` helper class.
 */
/* line 38, ../scss/inuit.css/generic/_shared.scss */
.landmark {
  margin-bottom: 48px;
  margin-bottom: 3rem; }

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
/* line 48, ../scss/inuit.css/generic/_shared.scss */
hr {
  margin-bottom: 22px;
  margin-bottom: 1.375rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
/*ul,ol,dd{
    margin-left:2 * $base-spacing-unit;
    margin-left:(2 * $base-spacing-unit / $base-font-size)*1rem;
}*/
/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $MAIN
\*------------------------------------*/
/* line 4, ../scss/inuit.css/base/_main.scss */
html {
  font: 1em/1.5 sans-serif;
  overflow-y: scroll;
  min-height: 100%; }

/*------------------------------------*\
    $HEADINGS
\*------------------------------------*/
/**
 * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * When we define a heading we also define a corresponding class to go with it.
 * This allows us to apply, say, `class=alpha` to a `h3`; a double-stranded
 * heading hierarchy.
 */
/* line 11, ../scss/inuit.css/base/_headings.scss */
h1, .alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333; }

/* line 14, ../scss/inuit.css/base/_headings.scss */
h2, .beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

/* line 17, ../scss/inuit.css/base/_headings.scss */
h3, .gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

/* line 20, ../scss/inuit.css/base/_headings.scss */
h4, .delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

/* line 23, ../scss/inuit.css/base/_headings.scss */
h5, .epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

/* line 26, ../scss/inuit.css/base/_headings.scss */
h6, .zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429; }

/**
 * Heading groups and generic any-heading class.
 * To target any heading of any level simply apply a class of `.hN`, e.g.:
 *
   <hgroup>
       <h1 class=hN>inuit.css</h1>
       <h2 class=hN>Best. Framework. Ever!</h2>
   </hgroup>
 *
 */
/* line 43, ../scss/inuit.css/base/_headings.scss */
hgroup .hN {
  margin-bottom: 0; }

/**
 * A series of classes for setting massive type; for use in heroes, mastheads,
 * promos, etc.
 */
/* line 52, ../scss/inuit.css/base/_headings.scss */
.giga {
  font-size: 96px;
  font-size: 6rem;
  line-height: 1; }

/* line 55, ../scss/inuit.css/base/_headings.scss */
.mega {
  font-size: 72px;
  font-size: 4.5rem;
  line-height: 1; }

/* line 58, ../scss/inuit.css/base/_headings.scss */
.kilo {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1; }

/*------------------------------------*\
    $PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger.
 */
/* line 9, ../scss/inuit.css/base/_paragraphs.scss */
.lede,
.lead {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }

/*------------------------------------*\
    $SMALLPRINT
\*------------------------------------*/
/**
 * A series of classes for setting tiny type; for use in smallprint etc.
 */
/* line 8, ../scss/inuit.css/base/_smallprint.scss */
.smallprint,
.milli {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2; }

/* line 11, ../scss/inuit.css/base/_smallprint.scss */
.micro {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 2.4; }

/*@import "base/quotes";*/
/*------------------------------------*\
    $CODE
\*------------------------------------*/
/**
 * Use an explicit font stack to ensure browsers render correct `line-height`.
 */
/* line 7, ../scss/inuit.css/base/_code.scss */
pre {
  overflow: auto; }

/* line 10, ../scss/inuit.css/base/_code.scss */
pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit; }

/**
 * Add comments to your code examples, e.g.:
 *
   <code>&lt;/div&gt;<span class=code-comment>&lt;!-- /wrapper --&gt;</span></code>
 *
 */
/* line 23, ../scss/inuit.css/base/_code.scss */
.code-comment {
  /**
   * Override this setting in your theme stylesheet
   */
  opacity: 0.75;
  filter: alpha(opacity=75); }

/**
 * You can add line numbers to your code examples but be warned, it requires
 * some pretty funky looking markup, e.g.:
 *
   <ol class=line-numbers>
       <li><code>.nav{</code></li>
       <li><code>    list-style:none;</code></li>
       <li><code>    margin-left:0;</code></li>
       <li><code>}</code></li>
       <li><code>    .nav > li,</code></li>
       <li><code>        .nav > li > a{</code></li>
       <li><code>            display:inline-block;</code></li>
       <li><code>           *display:inline-block;</code></li>
       <li><code>            zoom:1;</code></li>
       <li><code>        }</code></li>
   </ol>
 *
 * 1. Make the list look like code.
 * 2. Give the list flush numbers with a leading zero.
 * 3. Make sure lines of code don’t wrap.
 * 4. Give the code form by forcing the `code` to honour white-space.
 */
/* line 54, ../scss/inuit.css/base/_code.scss */
.line-numbers {
  font-family: monospace, serif;
  /* [1] */
  list-style: decimal-leading-zero inside;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  overflow: auto;
  /* [3] */
  margin-left: 0; }

/* line 61, ../scss/inuit.css/base/_code.scss */
.line-numbers code {
  white-space: pre;
  /* [4] */ }

/*------------------------------------*\
    $IMAGES
\*------------------------------------*/
/**
 * Demo: jsfiddle.net/inuitcss/yMtur
 */
/**
 * Fluid images.
 */
/* line 10, ../scss/inuit.css/base/_images.scss */
img {
  max-width: 100%; }

/**
 * Non-fluid images if you specify `width` and/or `height` attributes.
 */
/* line 19, ../scss/inuit.css/base/_images.scss */
img[width],
img[height] {
  max-width: none; }

/**
 * Rounded images.
 */
/* line 27, ../scss/inuit.css/base/_images.scss */
.img--round {
  border-radius: 4px; }

/**
 * Image placement variations.
 */
/* line 33, ../scss/inuit.css/base/_images.scss */
.img--right {
  float: right;
  margin-bottom: 24px;
  margin-left: 24px; }

/* line 38, ../scss/inuit.css/base/_images.scss */
.img--left {
  float: left;
  margin-right: 24px;
  margin-bottom: 24px; }

/* line 43, ../scss/inuit.css/base/_images.scss */
.img--center {
  display: block;
  margin-right: auto;
  margin-bottom: 24px;
  margin-left: auto; }

/**
 * Keep your images on your baseline.
 *
 * Please note, these will not work too nicely with fluid images and will
 * distort when resized below a certain width. Use with caution.
 */
/* line 57, ../scss/inuit.css/base/_images.scss */
.img--short {
  height: 120px; }

/* line 60, ../scss/inuit.css/base/_images.scss */
.img--medium {
  height: 240px; }

/* line 63, ../scss/inuit.css/base/_images.scss */
.img--tall {
  height: 360px; }

/**
 * Images in `figure` elements.
 */
/* line 71, ../scss/inuit.css/base/_images.scss */
figure > img {
  display: block; }

/*@import "base/lists";*/
/*@import "base/tables";*/
/*@import "base/forms";*/
/**
 * Objects and abstractions
 */
/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * Fluid and nestable grid system, e.g.:
 *
   <div class="grid">

       <div class="grid__item  one-third">
           <p>One third grid</p>
       </div><!--

    --><div class="grid__item  two-thirds">
           <p>Two thirds grid</p>
       </div><!--

    --><div class="grid__item  one-half">
           <p>One half grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div>

   </div>
 *
 * Demo: jsfiddle.net/inuitcss/CLYUC
 *
 */
/**
 * Grid wrapper
 */
/* line 41, ../scss/inuit.css/objects/_grids.scss */
.grid {
  margin-left: -24px;
  list-style: none;
  margin-bottom: 0; }

/**
 * Very infrequently occuring grid wrappers as children of grid wrappers.
 */
/* line 51, ../scss/inuit.css/objects/_grids.scss */
.grid > .grid {
  margin-left: 0; }

/**
 * Grid
 */
/* line 59, ../scss/inuit.css/objects/_grids.scss */
.grid__item {
  display: inline-block;
  width: 100%;
  padding-left: 24px;
  vertical-align: top; }

/*@import "objects/nav";*/
/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */
/**
* Whole
*/
/* line 17, ../scss/inuit.css/generic/_widths.scss */
.one-whole {
  width: 100%; }

/**
* Halves
*/
/* line 23, ../scss/inuit.css/generic/_widths.scss */
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%; }

/**
* Thirds
*/
/* line 29, ../scss/inuit.css/generic/_widths.scss */
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%; }

/* line 30, ../scss/inuit.css/generic/_widths.scss */
.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%; }

/**
* Quarters
*/
/* line 36, ../scss/inuit.css/generic/_widths.scss */
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%; }

/* line 38, ../scss/inuit.css/generic/_widths.scss */
.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%; }

/**
* Fifths
*/
/* line 44, ../scss/inuit.css/generic/_widths.scss */
.one-fifth, .two-tenths {
  width: 20%; }

/* line 45, ../scss/inuit.css/generic/_widths.scss */
.two-fifths, .four-tenths {
  width: 40%; }

/* line 46, ../scss/inuit.css/generic/_widths.scss */
.three-fifths, .six-tenths {
  width: 60%; }

/* line 47, ../scss/inuit.css/generic/_widths.scss */
.four-fifths, .eight-tenths {
  width: 80%; }

/**
* Sixths
*/
/* line 53, ../scss/inuit.css/generic/_widths.scss */
.one-sixth, .two-twelfths {
  width: 16.666%; }

/* line 57, ../scss/inuit.css/generic/_widths.scss */
.five-sixths, .ten-twelfths {
  width: 83.333%; }

/**
* Eighths
*/
/* line 63, ../scss/inuit.css/generic/_widths.scss */
.one-eighth {
  width: 12.5%; }

/* line 65, ../scss/inuit.css/generic/_widths.scss */
.three-eighths {
  width: 37.5%; }

/* line 67, ../scss/inuit.css/generic/_widths.scss */
.five-eighths {
  width: 62.5%; }

/* line 69, ../scss/inuit.css/generic/_widths.scss */
.seven-eighths {
  width: 87.5%; }

/**
* Tenths
*/
/* line 75, ../scss/inuit.css/generic/_widths.scss */
.one-tenth {
  width: 10%; }

/* line 77, ../scss/inuit.css/generic/_widths.scss */
.three-tenths {
  width: 30%; }

/* line 81, ../scss/inuit.css/generic/_widths.scss */
.seven-tenths {
  width: 70%; }

/* line 83, ../scss/inuit.css/generic/_widths.scss */
.nine-tenths {
  width: 90%; }

/**
* Twelfths
*/
/* line 89, ../scss/inuit.css/generic/_widths.scss */
.one-twelfth {
  width: 8.333%; }

/* line 93, ../scss/inuit.css/generic/_widths.scss */
.five-twelfths {
  width: 41.666%; }

/* line 95, ../scss/inuit.css/generic/_widths.scss */
.seven-twelfths {
  width: 58.333%; }

/* line 99, ../scss/inuit.css/generic/_widths.scss */
.eleven-twelfths {
  width: 91.666%; }

/**
 * If you have set `$responsive` to ‘true’ in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoint you’d like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter  lap-one-half  palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at ‘desktop’ sizes, takes up a quarter of the
 * horizontal space, a half of that space at ‘tablet’ sizes, and goes full width
 * at ‘mobile’ sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */
@media only screen and (max-width: 799px) {
  /**
  * Whole
  */
  /* line 17, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  /* line 23, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-half, .smartphone-two-quarters, .smartphone-three-sixths, .smartphone-four-eighths, .smartphone-five-tenths, .smartphone-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  /* line 29, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-third, .smartphone-two-sixths, .smartphone-four-twelfths {
    width: 33.333%; }

  /* line 30, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-two-thirds, .smartphone-four-sixths, .smartphone-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  /* line 36, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-quarter, .smartphone-two-eighths, .smartphone-three-twelfths {
    width: 25%; }

  /* line 38, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-three-quarters, .smartphone-six-eighths, .smartphone-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  /* line 44, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-fifth, .smartphone-two-tenths {
    width: 20%; }

  /* line 45, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-two-fifths, .smartphone-four-tenths {
    width: 40%; }

  /* line 46, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-three-fifths, .smartphone-six-tenths {
    width: 60%; }

  /* line 47, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-four-fifths, .smartphone-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  /* line 53, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-sixth, .smartphone-two-twelfths {
    width: 16.666%; }

  /* line 57, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-five-sixths, .smartphone-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  /* line 63, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-eighth {
    width: 12.5%; }

  /* line 65, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-three-eighths {
    width: 37.5%; }

  /* line 67, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-five-eighths {
    width: 62.5%; }

  /* line 69, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  /* line 75, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-tenth {
    width: 10%; }

  /* line 77, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-three-tenths {
    width: 30%; }

  /* line 81, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-seven-tenths {
    width: 70%; }

  /* line 83, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  /* line 89, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-one-twelfth {
    width: 8.333%; }

  /* line 93, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-five-twelfths {
    width: 41.666%; }

  /* line 95, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-seven-twelfths {
    width: 58.333%; }

  /* line 99, ../scss/inuit.css/generic/_widths.scss */
  .smartphone-eleven-twelfths {
    width: 91.666%; } }
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 800px) and (max-width: 944px) {
  /**
  * Whole
  */
  /* line 17, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  /* line 23, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-half, .tablet-portrait-two-quarters, .tablet-portrait-three-sixths, .tablet-portrait-four-eighths, .tablet-portrait-five-tenths, .tablet-portrait-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  /* line 29, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-third, .tablet-portrait-two-sixths, .tablet-portrait-four-twelfths {
    width: 33.333%; }

  /* line 30, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-two-thirds, .tablet-portrait-four-sixths, .tablet-portrait-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  /* line 36, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-quarter, .tablet-portrait-two-eighths, .tablet-portrait-three-twelfths {
    width: 25%; }

  /* line 38, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-three-quarters, .tablet-portrait-six-eighths, .tablet-portrait-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  /* line 44, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-fifth, .tablet-portrait-two-tenths {
    width: 20%; }

  /* line 45, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-two-fifths, .tablet-portrait-four-tenths {
    width: 40%; }

  /* line 46, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-three-fifths, .tablet-portrait-six-tenths {
    width: 60%; }

  /* line 47, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-four-fifths, .tablet-portrait-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  /* line 53, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-sixth, .tablet-portrait-two-twelfths {
    width: 16.666%; }

  /* line 57, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-five-sixths, .tablet-portrait-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  /* line 63, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-eighth {
    width: 12.5%; }

  /* line 65, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-three-eighths {
    width: 37.5%; }

  /* line 67, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-five-eighths {
    width: 62.5%; }

  /* line 69, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  /* line 75, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-tenth {
    width: 10%; }

  /* line 77, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-three-tenths {
    width: 30%; }

  /* line 81, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-seven-tenths {
    width: 70%; }

  /* line 83, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  /* line 89, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-one-twelfth {
    width: 8.333%; }

  /* line 93, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-five-twelfths {
    width: 41.666%; }

  /* line 95, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-seven-twelfths {
    width: 58.333%; }

  /* line 99, ../scss/inuit.css/generic/_widths.scss */
  .tablet-portrait-eleven-twelfths {
    width: 91.666%; } }
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 945px) and (max-width: 1200px) {
  /**
  * Whole
  */
  /* line 17, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  /* line 23, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-half, .tablet-laptop-two-quarters, .tablet-laptop-three-sixths, .tablet-laptop-four-eighths, .tablet-laptop-five-tenths, .tablet-laptop-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  /* line 29, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-third, .tablet-laptop-two-sixths, .tablet-laptop-four-twelfths {
    width: 33.333%; }

  /* line 30, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-two-thirds, .tablet-laptop-four-sixths, .tablet-laptop-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  /* line 36, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-quarter, .tablet-laptop-two-eighths, .tablet-laptop-three-twelfths {
    width: 25%; }

  /* line 38, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-three-quarters, .tablet-laptop-six-eighths, .tablet-laptop-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  /* line 44, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-fifth, .tablet-laptop-two-tenths {
    width: 20%; }

  /* line 45, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-two-fifths, .tablet-laptop-four-tenths {
    width: 40%; }

  /* line 46, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-three-fifths, .tablet-laptop-six-tenths {
    width: 60%; }

  /* line 47, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-four-fifths, .tablet-laptop-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  /* line 53, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-sixth, .tablet-laptop-two-twelfths {
    width: 16.666%; }

  /* line 57, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-five-sixths, .tablet-laptop-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  /* line 63, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-eighth {
    width: 12.5%; }

  /* line 65, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-three-eighths {
    width: 37.5%; }

  /* line 67, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-five-eighths {
    width: 62.5%; }

  /* line 69, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  /* line 75, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-tenth {
    width: 10%; }

  /* line 77, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-three-tenths {
    width: 30%; }

  /* line 81, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-seven-tenths {
    width: 70%; }

  /* line 83, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  /* line 89, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-one-twelfth {
    width: 8.333%; }

  /* line 93, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-five-twelfths {
    width: 41.666%; }

  /* line 95, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-seven-twelfths {
    width: 58.333%; }

  /* line 99, ../scss/inuit.css/generic/_widths.scss */
  .tablet-laptop-eleven-twelfths {
    width: 91.666%; } }
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 1200px) {
  /**
  * Whole
  */
  /* line 17, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  /* line 23, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-half, .desk-two-quarters, .desk-three-sixths, .desk-four-eighths, .desk-five-tenths, .desk-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  /* line 29, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-third, .desk-two-sixths, .desk-four-twelfths {
    width: 33.333%; }

  /* line 30, ../scss/inuit.css/generic/_widths.scss */
  .desk-two-thirds, .desk-four-sixths, .desk-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  /* line 36, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-quarter, .desk-two-eighths, .desk-three-twelfths {
    width: 25%; }

  /* line 38, ../scss/inuit.css/generic/_widths.scss */
  .desk-three-quarters, .desk-six-eighths, .desk-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  /* line 44, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-fifth, .desk-two-tenths {
    width: 20%; }

  /* line 45, ../scss/inuit.css/generic/_widths.scss */
  .desk-two-fifths, .desk-four-tenths {
    width: 40%; }

  /* line 46, ../scss/inuit.css/generic/_widths.scss */
  .desk-three-fifths, .desk-six-tenths {
    width: 60%; }

  /* line 47, ../scss/inuit.css/generic/_widths.scss */
  .desk-four-fifths, .desk-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  /* line 53, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-sixth, .desk-two-twelfths {
    width: 16.666%; }

  /* line 57, ../scss/inuit.css/generic/_widths.scss */
  .desk-five-sixths, .desk-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  /* line 63, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-eighth {
    width: 12.5%; }

  /* line 65, ../scss/inuit.css/generic/_widths.scss */
  .desk-three-eighths {
    width: 37.5%; }

  /* line 67, ../scss/inuit.css/generic/_widths.scss */
  .desk-five-eighths {
    width: 62.5%; }

  /* line 69, ../scss/inuit.css/generic/_widths.scss */
  .desk-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  /* line 75, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-tenth {
    width: 10%; }

  /* line 77, ../scss/inuit.css/generic/_widths.scss */
  .desk-three-tenths {
    width: 30%; }

  /* line 81, ../scss/inuit.css/generic/_widths.scss */
  .desk-seven-tenths {
    width: 70%; }

  /* line 83, ../scss/inuit.css/generic/_widths.scss */
  .desk-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  /* line 89, ../scss/inuit.css/generic/_widths.scss */
  .desk-one-twelfth {
    width: 8.333%; }

  /* line 93, ../scss/inuit.css/generic/_widths.scss */
  .desk-five-twelfths {
    width: 41.666%; }

  /* line 95, ../scss/inuit.css/generic/_widths.scss */
  .desk-seven-twelfths {
    width: 58.333%; }

  /* line 99, ../scss/inuit.css/generic/_widths.scss */
  .desk-eleven-twelfths {
    width: 91.666%; } }
/**
 * If you have set the additional `$responsive-extra` variable to ‘true’ in
 * `_vars.scss` then you now have access to the following class available to
 * accomodate much larger screen resolutions.
 */
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 1440px) {
  /**
  * Whole
  */
  /* line 17, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  /* line 23, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-half, .desk-wide-two-quarters, .desk-wide-three-sixths, .desk-wide-four-eighths, .desk-wide-five-tenths, .desk-wide-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  /* line 29, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-third, .desk-wide-two-sixths, .desk-wide-four-twelfths {
    width: 33.333%; }

  /* line 30, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-two-thirds, .desk-wide-four-sixths, .desk-wide-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  /* line 36, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-quarter, .desk-wide-two-eighths, .desk-wide-three-twelfths {
    width: 25%; }

  /* line 38, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-three-quarters, .desk-wide-six-eighths, .desk-wide-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  /* line 44, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-fifth, .desk-wide-two-tenths {
    width: 20%; }

  /* line 45, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-two-fifths, .desk-wide-four-tenths {
    width: 40%; }

  /* line 46, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-three-fifths, .desk-wide-six-tenths {
    width: 60%; }

  /* line 47, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-four-fifths, .desk-wide-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  /* line 53, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-sixth, .desk-wide-two-twelfths {
    width: 16.666%; }

  /* line 57, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-five-sixths, .desk-wide-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  /* line 63, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-eighth {
    width: 12.5%; }

  /* line 65, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-three-eighths {
    width: 37.5%; }

  /* line 67, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-five-eighths {
    width: 62.5%; }

  /* line 69, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  /* line 75, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-tenth {
    width: 10%; }

  /* line 77, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-three-tenths {
    width: 30%; }

  /* line 81, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-seven-tenths {
    width: 70%; }

  /* line 83, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  /* line 89, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-one-twelfth {
    width: 8.333%; }

  /* line 93, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-five-twelfths {
    width: 41.666%; }

  /* line 95, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-seven-twelfths {
    width: 58.333%; }

  /* line 99, ../scss/inuit.css/generic/_widths.scss */
  .desk-wide-eleven-twelfths {
    width: 91.666%; } }
/* endif */
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * `.brand` is a quick and simple way to apply your brand face and/or color to
 * any element using a handy helper class.
 */
/* line 8, ../scss/inuit.css/generic/_brand.scss */
.brand {
  font-family: "Helvetica Neue", sans-serif!important;
  color: #4a8ec2!important; }

/* line 12, ../scss/inuit.css/generic/_brand.scss */
.brand-face {
  font-family: "Helvetica Neue", sans-serif!important; }

/* line 16, ../scss/inuit.css/generic/_brand.scss */
.brand-color,
.brand-colour {
  color: #4a8ec2!important; }

/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */
/**
 * Add/remove floats
 */
/* line 18, ../scss/inuit.css/generic/_helper.scss */
.float--right {
  float: right !important; }

/* line 19, ../scss/inuit.css/generic/_helper.scss */
.float--left {
  float: left !important; }

/* line 20, ../scss/inuit.css/generic/_helper.scss */
.float--none {
  float: none !important; }

/**
 * Text alignment
 */
/* line 26, ../scss/inuit.css/generic/_helper.scss */
.text--left {
  text-align: left  !important; }

/* line 27, ../scss/inuit.css/generic/_helper.scss */
.text--center {
  text-align: center !important; }

/* line 28, ../scss/inuit.css/generic/_helper.scss */
.text--right {
  text-align: right !important; }

/**
 * Font weights
 */
/* line 34, ../scss/inuit.css/generic/_helper.scss */
.weight--light {
  font-weight: 300 !important; }

/* line 35, ../scss/inuit.css/generic/_helper.scss */
.weight--normal {
  font-weight: 400 !important; }

/* line 36, ../scss/inuit.css/generic/_helper.scss */
.weight--semibold {
  font-weight: 600 !important; }

/**
 * Add/remove margins
 */
/* line 42, ../scss/inuit.css/generic/_helper.scss */
.push {
  margin: 24px !important; }

/* line 43, ../scss/inuit.css/generic/_helper.scss */
.push--top {
  margin-top: 24px !important; }

/* line 44, ../scss/inuit.css/generic/_helper.scss */
.push--right {
  margin-right: 24px !important; }

/* line 45, ../scss/inuit.css/generic/_helper.scss */
.push--bottom {
  margin-bottom: 24px !important; }

/* line 46, ../scss/inuit.css/generic/_helper.scss */
.push--left {
  margin-left: 24px !important; }

/* line 47, ../scss/inuit.css/generic/_helper.scss */
.push--ends {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

/* line 48, ../scss/inuit.css/generic/_helper.scss */
.push--sides {
  margin-right: 24px !important;
  margin-left: 24px !important; }

/* line 50, ../scss/inuit.css/generic/_helper.scss */
.push-half {
  margin: 12px !important; }

/* line 51, ../scss/inuit.css/generic/_helper.scss */
.push-half--top {
  margin-top: 12px !important; }

/* line 52, ../scss/inuit.css/generic/_helper.scss */
.push-half--right {
  margin-right: 12px !important; }

/* line 53, ../scss/inuit.css/generic/_helper.scss */
.push-half--bottom {
  margin-bottom: 12px !important; }

/* line 54, ../scss/inuit.css/generic/_helper.scss */
.push-half--left {
  margin-left: 12px !important; }

/* line 55, ../scss/inuit.css/generic/_helper.scss */
.push-half--ends {
  margin-top: 12px !important;
  margin-bottom: 12px !important; }

/* line 56, ../scss/inuit.css/generic/_helper.scss */
.push-half--sides {
  margin-right: 12px !important;
  margin-left: 12px !important; }

/* line 58, ../scss/inuit.css/generic/_helper.scss */
.flush {
  margin: 0 !important; }

/* line 59, ../scss/inuit.css/generic/_helper.scss */
.flush--top {
  margin-top: 0 !important; }

/* line 60, ../scss/inuit.css/generic/_helper.scss */
.flush--right {
  margin-right: 0 !important; }

/* line 61, ../scss/inuit.css/generic/_helper.scss */
.flush--bottom {
  margin-bottom: 0 !important; }

/* line 62, ../scss/inuit.css/generic/_helper.scss */
.flush--left {
  margin-left: 0 !important; }

/* line 63, ../scss/inuit.css/generic/_helper.scss */
.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

/* line 64, ../scss/inuit.css/generic/_helper.scss */
.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important; }

/**
 * Add/remove paddings
 */
/* line 70, ../scss/inuit.css/generic/_helper.scss */
.soft {
  padding: 24px !important; }

/* line 71, ../scss/inuit.css/generic/_helper.scss */
.soft--top {
  padding-top: 24px !important; }

/* line 72, ../scss/inuit.css/generic/_helper.scss */
.soft--right {
  padding-right: 24px !important; }

/* line 73, ../scss/inuit.css/generic/_helper.scss */
.soft--bottom {
  padding-bottom: 24px !important; }

/* line 74, ../scss/inuit.css/generic/_helper.scss */
.soft--left {
  padding-left: 24px !important; }

/* line 75, ../scss/inuit.css/generic/_helper.scss */
.soft--ends {
  padding-top: 24px !important;
  padding-bottom: 24px !important; }

/* line 76, ../scss/inuit.css/generic/_helper.scss */
.soft--sides {
  padding-right: 24px !important;
  padding-left: 24px !important; }

/* line 78, ../scss/inuit.css/generic/_helper.scss */
.soft-half {
  padding: 12px !important; }

/* line 79, ../scss/inuit.css/generic/_helper.scss */
.soft-half--top {
  padding-top: 12px !important; }

/* line 80, ../scss/inuit.css/generic/_helper.scss */
.soft-half--right {
  padding-right: 12px !important; }

/* line 81, ../scss/inuit.css/generic/_helper.scss */
.soft-half--bottom {
  padding-bottom: 12px !important; }

/* line 82, ../scss/inuit.css/generic/_helper.scss */
.soft-half--left {
  padding-left: 12px !important; }

/* line 83, ../scss/inuit.css/generic/_helper.scss */
.soft-half--ends {
  padding-top: 12px !important;
  padding-bottom: 12px !important; }

/* line 84, ../scss/inuit.css/generic/_helper.scss */
.soft-half--sides {
  padding-right: 12px !important;
  padding-left: 12px !important; }

/* line 86, ../scss/inuit.css/generic/_helper.scss */
.hard {
  padding: 0 !important; }

/* line 87, ../scss/inuit.css/generic/_helper.scss */
.hard--top {
  padding-top: 0 !important; }

/* line 88, ../scss/inuit.css/generic/_helper.scss */
.hard--right {
  padding-right: 0 !important; }

/* line 89, ../scss/inuit.css/generic/_helper.scss */
.hard--bottom {
  padding-bottom: 0 !important; }

/* line 90, ../scss/inuit.css/generic/_helper.scss */
.hard--left {
  padding-left: 0 !important; }

/* line 91, ../scss/inuit.css/generic/_helper.scss */
.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

/* line 92, ../scss/inuit.css/generic/_helper.scss */
.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important; }

/**
 * Pull items full width of `.island` parents.
 */
/* line 98, ../scss/inuit.css/generic/_helper.scss */
.full-bleed {
  margin-right: -24px !important;
  margin-left: -24px !important; }
  /* line 102, ../scss/inuit.css/generic/_helper.scss */
  .islet .full-bleed {
    margin-right: -12px !important;
    margin-left: -12px !important; }

/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
/* line 113, ../scss/inuit.css/generic/_helper.scss */
.informative {
  cursor: help !important; }

/**
 * Mute an object by reducing its opacity.
 */
/* line 121, ../scss/inuit.css/generic/_helper.scss */
.muted {
  opacity: 0.5 !important;
  filter: alpha(opacity=50) !important; }

/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 *
   <p class=proceed><a href=#>Read more...</a></p>
 *
 */
/* line 133, ../scss/inuit.css/generic/_helper.scss */
.proceed {
  text-align: right !important; }

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
/* line 144, ../scss/inuit.css/generic/_helper.scss */
.go:after {
  content: "\00A0" "\00BB" !important; }

/**
 * Apply capital case to an element (usually a `strong`).
 */
/* line 152, ../scss/inuit.css/generic/_helper.scss */
.caps {
  text-transform: uppercase !important; }

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
/* line 172, ../scss/inuit.css/generic/_helper.scss */
.accessibility,
.visuallyhidden {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important; }

/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 1200px) {
  /* line 179, ../scss/inuit.css/generic/_helper.scss */
  .accessibility--desk,
  .visuallyhidden--desk {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important; } }
/*    @if $media-query == portable{

        @media only screen and (min-width:$lap-end) and (max-width:$desk-start) { @content; }

    }*/
@media only screen and (min-width: 1440px) {
  /* line 179, ../scss/inuit.css/generic/_helper.scss */
  .accessibility--desk-wide,
  .visuallyhidden--desk-wide {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important; } }
/* endif */
/*BASE*/
/* line 4, ../scss/ui/_general.scss */
html, body {
  width: 100%;
  height: 100%;
  background-color: #fcfcfc;
  color: #333333; }

/* line 11, ../scss/ui/_general.scss */
body {
  font-family: 'Kreon', serif;
  font-weight: 300; }

/* line 17, ../scss/ui/_general.scss */
.main_daha.posts {
  padding-left: 40px; }

/* line 22, ../scss/ui/_general.scss */
a {
  color: #212121;
  font-weight: 400;
  font-style: italic; }
  /* line 26, ../scss/ui/_general.scss */
  a:hover {
    text-decoration: underline; }

/* line 31, ../scss/ui/_general.scss */
h1, h2, h3, h4, h5, h6, .btn, .posttags_daha {
  font-family: 'Raleway', sans-serif;
  font-weight: 200; }

/* line 36, ../scss/ui/_general.scss */
strong {
  font-weight: 400; }

/* line 40, ../scss/ui/_general.scss */
pre, code {
  font-size: 12px; }

/* line 44, ../scss/ui/_general.scss */
blockquote {
  background: whitesmoke;
  border-left: 10px solid #212121;
  font-style: italic;
  margin: 1.5em 10px;
  padding: 0.5em 10px;
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/* line 52, ../scss/ui/_general.scss */
blockquote:before {
  color: #212121;
  font-style: normal;
  content: open-quote;
  font-size: 4em;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.4em; }

/* line 61, ../scss/ui/_general.scss */
blockquote p {
  display: inline; }

/* line 65, ../scss/ui/_general.scss */
.animate, .navigationFixed li a, .btn {
  -webkit-transition-property: all;
  -moz-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 0.3s;
  -moz-transition-duration: 0.3s;
  -o-transition-duration: 0.3s;
  transition-duration: 0.3s; }

/* line 69, ../scss/ui/_general.scss */
.pace .pace-progress {
  background: white;
  position: fixed;
  z-index: 2000;
  top: 0;
  left: 0;
  height: 2px;
  -webkit-transition: width 1s;
  -moz-transition: width 1s;
  -o-transition: width 1s;
  transition: width 1s; }

/* line 83, ../scss/ui/_general.scss */
.pace-inactive {
  display: none; }

/* line 1, ../scss/ui/_nav.scss */
nav.mainNav {
  background-color: #212121;
  width: 40px;
  height: 100%;
  position: fixed;
  z-index: 100;
  left: 0;
  top: 0; }
  /* line 9, ../scss/ui/_nav.scss */
  nav.mainNav ul {
    position: absolute;
    bottom: 0;
    margin-bottom: 0; }
    /* line 14, ../scss/ui/_nav.scss */
    nav.mainNav ul li a {
      display: block;
      width: 40px;
      height: 40px;
      font-size: 0;
      border-top: 1px solid #141414;
      background: url(../img/navigation.png) no-repeat left top; }
      /* line 21, ../scss/ui/_nav.scss */
      nav.mainNav ul li a:hover {
        background-color: #2e2e2e; }
      /* line 24, ../scss/ui/_nav.scss */
      nav.mainNav ul li a.instagram {
        background-position: left -40px; }
      /* line 27, ../scss/ui/_nav.scss */
      nav.mainNav ul li a.dribbble {
        background-position: left -80px; }
      /* line 30, ../scss/ui/_nav.scss */
      nav.mainNav ul li a.github {
        background-position: left -120px; }
      /* line 33, ../scss/ui/_nav.scss */
      nav.mainNav ul li a.mail {
        background-position: left -160px; }
  /* line 40, ../scss/ui/_nav.scss */
  nav.mainNav h1 img {
    margin-left: 8px; }

/* line 46, ../scss/ui/_nav.scss */
.navigationFixed {
  position: fixed;
  left: 0;
  top: 50px; }
  /* line 51, ../scss/ui/_nav.scss */
  .navigationFixed li a {
    font-family: 'Raleway', sans-serif;
    font-weight: 400;
    font-size: .8rem;
    line-height: 40px;
    text-align: right;
    padding-left: 5px;
    font-style: normal;
    color: white;
    display: block;
    width: 150px;
    position: relative;
    left: -110px;
    height: 40px;
    background: #212121 url(../img/navFixed.png) no-repeat right top;
    border: 1px solid #212121;
    margin-bottom: .5rem; }
    /* line 69, ../scss/ui/_nav.scss */
    .navigationFixed li a:hover {
      left: 0;
      text-decoration: none;
      background-color: white;
      color: #212121;
      border: 1px solid #ededed; }
      /* line 75, ../scss/ui/_nav.scss */
      .navigationFixed li a:hover span {
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
        opacity: 1; }
    /* line 79, ../scss/ui/_nav.scss */
    .navigationFixed li a.top {
      background-position: right -80px;
      filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
      opacity: 0; }
      /* line 82, ../scss/ui/_nav.scss */
      .navigationFixed li a.top span {
        background-position: right -120px; }
      /* line 85, ../scss/ui/_nav.scss */
      .navigationFixed li a.top.opacity {
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
        opacity: 1; }
    /* line 89, ../scss/ui/_nav.scss */
    .navigationFixed li a.next {
      background-position: right -160px; }
      /* line 91, ../scss/ui/_nav.scss */
      .navigationFixed li a.next span {
        background-position: right -200px; }
    /* line 95, ../scss/ui/_nav.scss */
    .navigationFixed li a.prev {
      background-position: right -240px; }
      /* line 97, ../scss/ui/_nav.scss */
      .navigationFixed li a.prev span {
        background-position: right -280px; }
    /* line 101, ../scss/ui/_nav.scss */
    .navigationFixed li a span {
      display: block;
      width: 40px;
      height: 40px;
      float: right;
      filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
      opacity: 0;
      background: transparent url(../img/navFixed.png) no-repeat right -40px; }

/* line 1, ../scss/ui/_posts.scss */
.posts {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: auto; }
  /* line 8, ../scss/ui/_posts.scss */
  .posts > div {
    height: 100%;
    overflow: auto; }
    /* line 11, ../scss/ui/_posts.scss */
    .posts > div article {
      float: left;
      height: 100%;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box; }
      /* line 17, ../scss/ui/_posts.scss */
      .posts > div article > div {
        width: 600px;
        padding: 10px 20px;
        border-right: 1px solid #eaeaea;
        overflow: auto;
        height: 100%;
        position: relative; }
        /* line 24, ../scss/ui/_posts.scss */
        .posts > div article > div.fullSize {
          width: 750px; }

/* line 32, ../scss/ui/_posts.scss */
article {
  border-top: 8px solid #212121; }
  /* line 34, ../scss/ui/_posts.scss */
  article.aroe {
    border-color: #ff4f55; }
  /* line 37, ../scss/ui/_posts.scss */
  article.analytics {
    border-color: #ffa900; }
  /* line 40, ../scss/ui/_posts.scss */
  article.html {
    border-color: #f14a29; }
  /* line 43, ../scss/ui/_posts.scss */
  article.css {
    border-color: #0092bf; }
  /* line 46, ../scss/ui/_posts.scss */
  article.node {
    border-color: #8cc84b; }

/* line 51, ../scss/ui/_posts.scss */
h1 {
  margin-bottom: 0rem; }

/* line 54, ../scss/ui/_posts.scss */
.date {
  margin-bottom: 1.2rem;
  overflow: hidden;
  display: block;
  font-size: .8rem;
  font-style: italic; }

/* line 62, ../scss/ui/_posts.scss */
.bottom_daha {
  position: absolute;
  margin-left: -20px;
  height: 50px;
  width: 100%;
  bottom: 0;
  padding: 10px 20px;
  background-color: #fcfcfc;
  border-top: 1px solid #e3e3e3; }

/* line 74, ../scss/ui/_posts.scss */
.btn {
  float: right;
  height: 30px;
  padding: 0 1rem;
  display: block;
  border: 1px solid #e3e3e3;
  font-size: .75rem;
  color: #212121;
  line-height: 28px;
  text-transform: uppercase; }
  /* line 85, ../scss/ui/_posts.scss */
  .btn:hover {
    background-color: #212121;
    color: white; }

/* line 91, ../scss/ui/_posts.scss */
.share {
  float: left; }
  /* line 93, ../scss/ui/_posts.scss */
  .share li {
    float: left;
    margin-right: .5rem; }
    /* line 96, ../scss/ui/_posts.scss */
    .share li a {
      width: 30px;
      height: 30px;
      display: block;
      font-size: 0;
      border: 1px solid #e3e3e3;
      background: url(../img/socialPost.png) no-repeat -31px top;
      position: relative; }
      /* line 104, ../scss/ui/_posts.scss */
      .share li a.facebook {
        background-position: right -31px; }
        /* line 106, ../scss/ui/_posts.scss */
        .share li a.facebook span {
          background-position: -3px -32px; }
      /* line 110, ../scss/ui/_posts.scss */
      .share li a.google {
        background-position: -30px -60px; }
        /* line 112, ../scss/ui/_posts.scss */
        .share li a.google span {
          background-position: -1px -61px; }
      /* line 116, ../scss/ui/_posts.scss */
      .share li a.mail {
        background-position: -31px -90px; }
        /* line 118, ../scss/ui/_posts.scss */
        .share li a.mail span {
          background-position: -2px -91px; }
      /* line 122, ../scss/ui/_posts.scss */
      .share li a span {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 30px;
        width: 30px;
        background: #212121 url(../img/socialPost.png) no-repeat -2px -1px;
        border: 1px solid #212121;
        opacity: 0;
        -webkit-transition: opacity 0.3s;
        -moz-transition: opacity 0.3s;
        -o-transition: opacity 0.3s; }
        /* line 134, ../scss/ui/_posts.scss */
        .share li a span:hover {
          filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
          opacity: 1; }

/* line 1, ../scss/ui/_media.scss */
.mejs-video {
  margin-bottom: 2rem; }
  /* line 3, ../scss/ui/_media.scss */
  .mejs-video.mejs-container {
    width: 100% !important;
    height: auto !important;
    padding-top: 57%; }
  /* line 8, ../scss/ui/_media.scss */
  .mejs-video .mejs-overlay, .mejs-video .mejs-poster {
    width: 100% !important;
    height: 100% !important; }
  /* line 12, ../scss/ui/_media.scss */
  .mejs-video .mejs-mediaelement video {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100% !important;
    height: 100% !important; }

/* line 21, ../scss/ui/_media.scss */
.mejs-audio.mejs-container {
  width: 100% !important;
  height: auto !important; }

/* line 1, ../scss/ui/_footer.scss */
footer {
  height: 40px;
  line-height: 40px;
  width: 100%;
  text-align: center;
  color: white;
  background-color: #212121;
  font-size: .75rem;
  font-family: 'Raleway', sans-serif; }

/* line 1, ../scss/ui/_article.scss */
.onePost {
  width: 100%; }
  /* line 3, ../scss/ui/_article.scss */
  .onePost .article_daha {
    padding-top: 1rem;
    width: 600px;
    margin: 0 auto; }
    /* line 7, ../scss/ui/_article.scss */
    .onePost .article_daha hr {
      height: 1px;
      width: 100%;
      display: block;
      overflow: hidden;
      margin: 1rem 0;
      border: 0;
      background-color: #212121; }
    /* line 16, ../scss/ui/_article.scss */
    .onePost .article_daha .posttags_daha {
      font-size: 1rem;
      font-style: italic; }
    /* line 20, ../scss/ui/_article.scss */
    .onePost .article_daha #footer {
      display: none; }

/*PLUGIN*/
/*

Monokai Sublime style. Derived from Monokai by noformnocontent http://nn.mit-license.org/

*/
/* line 7, ../scss/plugin/_monokai.scss */
pre code {
  display: block;
  padding: 0.5em;
  background: #23241f; }

/* line 13, ../scss/plugin/_monokai.scss */
pre .tag,
pre code {
  color: #f8f8f2; }

/* line 25, ../scss/plugin/_monokai.scss */
pre .keyword,
pre .function,
pre .literal,
pre .change,
pre .winutils,
pre .flow,
pre .lisp .title,
pre .clojure .built_in,
pre .nginx .title,
pre .tex .special {
  color: #66d9ef; }

/* line 29, ../scss/plugin/_monokai.scss */
pre .variable,
pre .params {
  color: #fd9720; }

/* line 32, ../scss/plugin/_monokai.scss */
pre .constant {
  color: #66d9ef; }

/* line 37, ../scss/plugin/_monokai.scss */
pre .title,
pre .class .title,
pre .css .class {
  color: #a6e22e; }

/* line 45, ../scss/plugin/_monokai.scss */
pre .attribute,
pre .symbol,
pre .symbol .string,
pre .tag .title,
pre .value,
pre .css .tag {
  color: #f92672; }

/* line 50, ../scss/plugin/_monokai.scss */
pre .number,
pre .preprocessor,
pre .regexp {
  color: #ae81ff; }

/* line 75, ../scss/plugin/_monokai.scss */
pre .tag .value,
pre .string,
pre .css .id,
pre .subst,
pre .haskell .type,
pre .ruby .class .parent,
pre .built_in,
pre .sql .aggregate,
pre .django .template_tag,
pre .django .variable,
pre .smalltalk .class,
pre .django .filter .argument,
pre .smalltalk .localvars,
pre .smalltalk .array,
pre .attr_selector,
pre .pseudo,
pre .addition,
pre .stream,
pre .envvar,
pre .apache .tag,
pre .apache .cbracket,
pre .tex .command,
pre .prompt {
  color: #e6db74; }

/* line 88, ../scss/plugin/_monokai.scss */
pre .comment,
pre .javadoc,
pre .java .annotation,
pre .python .decorator,
pre .template_comment,
pre .pi,
pre .doctype,
pre .deletion,
pre .shebang,
pre .apache .sqbracket,
pre .tex .formula {
  color: #75715e; }

/* line 93, ../scss/plugin/_monokai.scss */
pre .coffeescript .javascript,
pre .javascript .xml,
pre .tex .formula {
  opacity: 0.5; }

/* line 99, ../scss/plugin/_monokai.scss */
pre .xml .javascript,
pre .xml .vbscript,
pre .xml .css,
pre .xml .cdata {
  opacity: 0.5; }

/* line 1, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container {
  position: relative;
  background: #000;
  font-family: Helvetica, Arial;
  text-align: left;
  vertical-align: top;
  text-indent: 0; }

/* line 10, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.me-plugin {
  position: absolute; }

/* line 14, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-embed, .mejs-embed body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  background: #000;
  overflow: hidden; }

/* line 23, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-fullscreen {
  /* set it to not show scroll bars so 100% will work */
  overflow: hidden !important; }

/* line 28, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container-fullscreen {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 1000; }

/* line 38, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container-fullscreen .mejs-mediaelement,
.mejs-container-fullscreen video {
  width: 100%;
  height: 100%; }

/* line 43, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-clear {
  clear: both; }

/* Start: LAYERS */
/* line 48, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-background {
  position: absolute;
  top: 0;
  left: 0; }

/* line 54, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-mediaelement {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

/* line 62, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-poster {
  position: absolute;
  top: 0;
  left: 0;
  background-size: contain;
  background-position: 50% 50%;
  background-repeat: no-repeat; }

/* line 70, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
:root .mejs-poster img {
  display: none; }

/* line 74, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-poster img {
  border: 0;
  padding: 0;
  border: 0; }

/* line 80, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay {
  position: absolute;
  top: 0;
  left: 0; }

/* line 86, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay-play {
  cursor: pointer; }

/* line 90, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay-button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  transform: translate(-50%, -25%);
  -webkit-transform: translate(-50%, -25%);
  -moz-transform: translate(-50%, -25%);
  -ms-transform: translate(-50%, -25%);
  background: url(bigplay.svg) no-repeat; }

/* line 103, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.no-svg .mejs-overlay-button {
  background-image: url(bigplay.png); }

/* line 107, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay:hover .mejs-overlay-button {
  background-position: 0 -100px; }

/* line 111, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  background: none; }

/* line 122, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-overlay-loading span {
  display: block;
  width: 80px;
  height: 80px;
  background: transparent url(loading.gif) 50% 50% no-repeat; }

/* End: LAYERS */
/* Start: CONTROL BAR */
/* line 132, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container .mejs-controls {
  position: absolute;
  list-style-type: none;
  margin: 0;
  padding: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  height: 30px;
  width: 100%; }

/* line 143, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container .mejs-controls div {
  list-style-type: none;
  background-image: none;
  display: block;
  float: left;
  margin: 0;
  padding: 0;
  width: 26px;
  height: 26px;
  font-size: 11px;
  line-height: 11px;
  font-family: Helvetica, Arial;
  border: 0; }

/* line 158, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-button button {
  cursor: pointer;
  display: block;
  font-size: 0;
  line-height: 0;
  text-decoration: none;
  margin: 7px 5px;
  padding: 0;
  position: absolute;
  height: 16px;
  width: 16px;
  border: 0;
  background: transparent url(controls.svg) no-repeat; }

/* line 173, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.no-svg .mejs-controls .mejs-button button {
  background-image: url(controls.png); }

/* line 179, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-audio .mejs-controls .mejs-button button {
  background-image: url(controlsBlack.svg); }
/* line 182, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-audio .no-svg .mejs-controls .mejs-button button {
  background-image: url(controlsBlack.png); }

/* :focus for accessibility */
/* line 188, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-button button:focus {
  outline: solid 1px yellow; }

/* End: CONTROL BAR */
/* Start: Time (Current / Duration) */
/* line 195, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container .mejs-controls .mejs-time {
  color: #fff;
  margin-top: 1px;
  display: block;
  height: 17px;
  width: auto;
  padding: 8px 3px 0 3px;
  overflow: hidden;
  text-align: center;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

/* line 209, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-container .mejs-controls .mejs-time span {
  color: #fff;
  font-size: 11px;
  line-height: 12px;
  display: block;
  float: left;
  margin: 1px 2px 0 0;
  width: auto; }

/* line 220, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-audio.mejs-container .mejs-controls .mejs-time {
  color: #212121; }
  /* line 222, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  .mejs-audio.mejs-container .mejs-controls .mejs-time span {
    color: #212121; }

/* End: Time (Current / Duration) */
/* Start: Play/Pause/Stop */
/* line 231, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-play button {
  background-position: 0 0; }

/* line 235, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-pause button {
  background-position: 0 -16px; }

/* line 239, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-stop button {
  background-position: -112px 0; }

/* Start: Play/Pause/Stop */
/* Start: Progress Bar */
/* line 245, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls div.mejs-time-rail {
  direction: ltr;
  margin-top: 13px;
  height: 4px; }

/* line 254, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail span {
  display: block;
  position: absolute;
  width: 180px;
  height: 4px;
  cursor: pointer; }

/* line 262, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-total {
  background: #333;
  background: #2e2e2e; }

/* line 268, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-buffering {
  width: 100%;
  background-image: -o-linear-gradient(-45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));
  background-image: -webkit-linear-gradient(-45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -ms-linear-gradient(-45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  -webkit-background-size: 15px 15px;
  -moz-background-size: 15px 15px;
  -o-background-size: 15px 15px;
  background-size: 15px 15px;
  -webkit-animation: buffering-stripes 2s linear infinite;
  -moz-animation: buffering-stripes 2s linear infinite;
  -ms-animation: buffering-stripes 2s linear infinite;
  -o-animation: buffering-stripes 2s linear infinite;
  animation: buffering-stripes 2s linear infinite; }

@-webkit-keyframes buffering-stripes {
  /* line 287, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  from {
    background-position: 0 0; }

  /* line 287, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  to {
    background-position: 30px 0; } }

@-moz-keyframes buffering-stripes {
  /* line 288, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  from {
    background-position: 0 0; }

  /* line 288, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  to {
    background-position: 30px 0; } }

@-ms-keyframes buffering-stripes {
  /* line 289, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  from {
    background-position: 0 0; }

  /* line 289, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  to {
    background-position: 30px 0; } }

@-o-keyframes buffering-stripes {
  /* line 290, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  from {
    background-position: 0 0; }

  /* line 290, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  to {
    background-position: 30px 0; } }

@keyframes buffering-stripes {
  /* line 291, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  from {
    background-position: 0 0; }

  /* line 291, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
  to {
    background-position: 30px 0; } }

/* line 294, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-loaded {
  background: #212121;
  background: rgba(33, 33, 33, 0.8);
  width: 0; }

/* line 301, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-current {
  background: #fff;
  background-color: #ff4f55;
  width: 0; }

/* line 307, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-handle {
  display: none;
  position: absolute;
  margin: 0;
  width: 10px;
  background: #fff;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  cursor: pointer;
  border: solid 2px #333;
  top: -2px;
  text-align: center; }

/* line 322, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-float {
  position: absolute;
  display: none;
  background: #eee;
  width: 36px;
  height: 17px;
  border: solid 1px #333;
  top: -26px;
  margin-left: -18px;
  text-align: center;
  color: #111; }

/* line 335, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-float-current {
  margin: 2px;
  width: 30px;
  display: block;
  text-align: center;
  left: 0; }

/* line 343, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-time-rail .mejs-time-float-corner {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  line-height: 0;
  border: solid 5px #eee;
  border-color: #eee transparent transparent transparent;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  top: 15px;
  left: 13px; }

/* line 358, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-long-video .mejs-controls .mejs-time-rail .mejs-time-float {
  width: 48px; }

/* line 362, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-long-video .mejs-controls .mejs-time-rail .mejs-time-float-current {
  width: 44px; }

/* line 366, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-long-video .mejs-controls .mejs-time-rail .mejs-time-float-corner {
  left: 18px; }

/*
.mejs-controls .mejs-time-rail:hover .mejs-time-handle {
	visibility:visible;
}
*/
/* End: Progress Bar */
/* Start: Fullscreen */
/* line 378, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-fullscreen-button button {
  background-position: -32px 0; }

/* line 382, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-unfullscreen button {
  background-position: -32px -16px; }

/* End: Fullscreen */
/* Start: Mute/Volume */
/* line 392, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-mute button {
  background-position: -16px -16px; }

/* line 396, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-unmute button {
  background-position: -16px 0; }

/* line 400, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-volume-button {
  position: relative; }

/* line 404, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-volume-button .mejs-volume-slider {
  display: none;
  height: 115px;
  width: 25px;
  background: url(background.png);
  background: rgba(50, 50, 50, 0.7);
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  top: -115px;
  left: 0;
  z-index: 1;
  position: absolute;
  margin: 0; }

/* line 427, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-volume-button .mejs-volume-slider .mejs-volume-total {
  position: absolute;
  left: 11px;
  top: 8px;
  width: 2px;
  height: 100px;
  background: #ddd;
  background: rgba(255, 255, 255, 0.5);
  margin: 0; }

/* line 438, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-volume-button .mejs-volume-slider .mejs-volume-current {
  position: absolute;
  left: 11px;
  top: 8px;
  width: 2px;
  height: 100px;
  background: #ddd;
  background-color: #ff4f55;
  margin: 0; }

/* line 449, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-volume-button .mejs-volume-slider .mejs-volume-handle {
  position: absolute;
  left: 4px;
  top: -3px;
  width: 16px;
  height: 6px;
  background: #ddd;
  background: rgba(255, 255, 255, 0.9);
  cursor: N-resize;
  -webkit-border-radius: 1px;
  -moz-border-radius: 1px;
  border-radius: 1px;
  margin: 0; }

/* horizontal version */
/* line 465, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls div.mejs-horizontal-volume-slider {
  height: 26px;
  margin-top: 2px;
  width: 60px;
  position: relative; }

/* line 474, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-total, .mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-current {
  position: absolute;
  left: 0;
  top: 11px;
  width: 50px;
  height: 4px;
  margin: 0;
  padding: 0;
  font-size: 1px;
  background-color: #212121; }
/* line 485, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-current {
  background-color: #ff4f55; }

/* line 491, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-horizontal-volume-slider .mejs-horizontal-volume-handle {
  display: none; }

/* End: Mute/Volume */
/* Start: Track (Captions and Chapters) */
/* line 498, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button {
  position: relative; }

/* line 502, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button button {
  background-position: -48px 0; }

/* line 505, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-selector {
  visibility: hidden;
  position: absolute;
  bottom: 26px;
  right: -10px;
  width: 130px;
  height: 100px;
  background: url(background.png);
  background: rgba(50, 50, 50, 0.7);
  border: solid 1px transparent;
  padding: 10px;
  overflow: hidden;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0; }

/*
.mejs-controls .mejs-captions-button:hover  .mejs-captions-selector {
	visibility: visible;
}
*/
/* line 528, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-selector ul {
  margin: 0;
  padding: 0;
  display: block;
  list-style-type: none !important;
  overflow: hidden; }

/* line 536, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-selector ul li {
  margin: 0 0 6px 0;
  padding: 0;
  list-style-type: none !important;
  display: block;
  color: #fff;
  overflow: hidden; }

/* line 545, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-selector ul li input {
  clear: both;
  float: left;
  margin: 3px 3px 0 5px; }

/* line 551, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-selector ul li label {
  width: 100px;
  float: left;
  padding: 4px 0 0 0;
  line-height: 15px;
  font-family: helvetica, arial;
  font-size: 10px; }

/* line 560, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-captions-button .mejs-captions-translations {
  font-size: 10px;
  margin: 0 0 5px 0; }

/* line 565, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters {
  position: absolute;
  top: 0;
  left: 0;
  -xborder-right: solid 1px #fff;
  width: 10000px;
  z-index: 1; }

/* line 574, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter {
  position: absolute;
  float: left;
  background: #222;
  background: rgba(0, 0, 0, 0.7);
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(50, 50, 50, 0.7)), to(rgba(0, 0, 0, 0.7)));
  background: -webkit-linear-gradient(top, rgba(50, 50, 50, 0.7), rgba(0, 0, 0, 0.7));
  background: -moz-linear-gradient(top, rgba(50, 50, 50, 0.7), rgba(0, 0, 0, 0.7));
  background: -o-linear-gradient(top, rgba(50, 50, 50, 0.7), rgba(0, 0, 0, 0.7));
  background: -ms-linear-gradient(top, rgba(50, 50, 50, 0.7), rgba(0, 0, 0, 0.7));
  background: linear-gradient(rgba(50, 50, 50, 0.7), rgba(0, 0, 0, 0.7));
  filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr=#323232,endColorstr=#000000);
  overflow: hidden;
  border: 0; }

/* line 590, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter .mejs-chapter-block {
  font-size: 11px;
  color: #fff;
  padding: 5px;
  display: block;
  border-right: solid 1px #333;
  border-bottom: solid 1px #333;
  cursor: pointer; }

/* line 600, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter .mejs-chapter-block-last {
  border-right: none; }

/* line 604, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter .mejs-chapter-block:hover {
  background: #666;
  background: rgba(102, 102, 102, 0.7);
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(102, 102, 102, 0.7)), to(rgba(50, 50, 50, 0.6)));
  background: -webkit-linear-gradient(top, rgba(102, 102, 102, 0.7), rgba(50, 50, 50, 0.6));
  background: -moz-linear-gradient(top, rgba(102, 102, 102, 0.7), rgba(50, 50, 50, 0.6));
  background: -o-linear-gradient(top, rgba(102, 102, 102, 0.7), rgba(50, 50, 50, 0.6));
  background: -ms-linear-gradient(top, rgba(102, 102, 102, 0.7), rgba(50, 50, 50, 0.6));
  background: linear-gradient(rgba(102, 102, 102, 0.7), rgba(50, 50, 50, 0.6));
  filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr=#666666,endColorstr=#323232); }

/* line 616, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter .mejs-chapter-block .ch-title {
  font-size: 12px;
  font-weight: bold;
  display: block;
  white-space: nowrap;
  text-overflow: ellipsis;
  margin: 0 0 3px 0;
  line-height: 12px; }

/* line 626, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-chapters .mejs-chapter .mejs-chapter-block .ch-timespan {
  font-size: 12px;
  line-height: 12px;
  margin: 3px 0 4px 0;
  display: block;
  white-space: nowrap;
  text-overflow: ellipsis; }

/* line 635, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-layer {
  position: absolute;
  bottom: 0;
  left: 0;
  text-align: center;
  line-height: 22px;
  font-size: 12px;
  color: #fff; }

/* line 645, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-layer a {
  color: #fff;
  text-decoration: underline; }

/* line 650, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-layer[lang=ar] {
  font-size: 20px;
  font-weight: normal; }

/* line 655, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-position {
  position: absolute;
  width: 100%;
  bottom: 15px;
  left: 0; }

/* line 662, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-position-hover {
  bottom: 45px; }

/* line 666, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-captions-text {
  padding: 3px 5px;
  background: url(background.png);
  background: rgba(20, 20, 20, 0.8); }

/* End: Track (Captions and Chapters) */
/* Start: Error */
/* line 678, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.me-cannotplay a {
  color: #fff;
  font-weight: bold; }

/* line 683, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.me-cannotplay span {
  padding: 15px;
  display: block; }

/* End: Error */
/* Start: Loop */
/* line 691, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-loop-off button {
  background-position: -64px -16px; }

/* line 695, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-loop-on button {
  background-position: -64px 0; }

/* End: Loop */
/* Start: backlight */
/* line 702, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-backlight-off button {
  background-position: -80px -16px; }

/* line 706, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-backlight-on button {
  background-position: -80px 0; }

/* End: backlight */
/* Start: Picture Controls */
/* line 712, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-picturecontrols-button {
  background-position: -96px 0; }

/* End: Picture Controls */
/* context menu */
/* line 719, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-contextmenu {
  position: absolute;
  width: 150px;
  padding: 10px;
  border-radius: 4px;
  top: 0;
  left: 0;
  background: #fff;
  border: solid 1px #999;
  z-index: 1001;
  /* make sure it shows on fullscreen */ }

/* line 730, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-contextmenu .mejs-contextmenu-separator {
  height: 1px;
  font-size: 0;
  margin: 5px 6px;
  background: #333; }

/* line 737, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-contextmenu .mejs-contextmenu-item {
  font-family: Helvetica, Arial;
  font-size: 12px;
  padding: 4px 6px;
  cursor: pointer;
  color: #333; }

/* line 744, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-contextmenu .mejs-contextmenu-item:hover {
  background: #2C7C91;
  color: #fff; }

/* Start: Source Chooser */
/* line 750, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button {
  position: relative; }

/* line 754, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button button {
  background-position: -128px 0; }

/* line 758, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector {
  visibility: hidden;
  position: absolute;
  bottom: 26px;
  right: -10px;
  width: 130px;
  height: 100px;
  background: url(background.png);
  background: rgba(50, 50, 50, 0.7);
  border: solid 1px transparent;
  padding: 10px;
  overflow: hidden;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0; }

/* line 775, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector ul {
  margin: 0;
  padding: 0;
  display: block;
  list-style-type: none !important;
  overflow: hidden; }

/* line 783, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector ul li {
  margin: 0 0 6px 0;
  padding: 0;
  list-style-type: none !important;
  display: block;
  color: #fff;
  overflow: hidden; }

/* line 792, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector ul li input {
  clear: both;
  float: left;
  margin: 3px 3px 0 5px; }

/* line 798, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector ul li label {
  width: 100px;
  float: left;
  padding: 4px 0 0 0;
  line-height: 15px;
  font-family: helvetica, arial;
  font-size: 10px; }

/* End: Source Chooser */
/* Start: Postroll */
/* line 809, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-postroll-layer {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url(background.png);
  background: rgba(50, 50, 50, 0.7);
  z-index: 1000;
  overflow: hidden; }

/* line 820, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-postroll-layer-content {
  width: 100%;
  height: 100%; }

/* line 824, ../scss/plugin/madiaelement/_mediaelementplayer.scss */
.mejs-postroll-close {
  position: absolute;
  right: 0;
  top: 0;
  background: url(background.png);
  background: rgba(50, 50, 50, 0.7);
  color: #fff;
  padding: 4px;
  z-index: 100;
  cursor: pointer; }

/* End: Postroll */
